# -*- coding: utf-8 -*-
"""Assignment.3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wdoOBiP8WY9hjiIoLQ8qzLLXp-oh2MMB
"""

import numpy as np
import matplotlib.pyplot as plt
def line_icepts(n,c):
  e1 = np.array([1,0]) 
  e2 = np.array([0,1]) 
  A = c*e1/(n@e1)
  B = c*e2/(n@e2)
  return A,B
def line_dir_pt(m,A,k1,k2):
  len =20
  dim = A.shape[0]
  x_AB = np.zeros((dim,len))
  lam_1 = np.linspace(k1,k2,len)
  for i in range(len):
    temp1 = A + lam_1[i]*m
    x_AB[:,i]= temp1.T
  return x_AB
#Generate line point
#Lines
n1 = np.array([3,-4]) 
n2 = np.array([-3,4]) 
c =  np.array([2,6]) 
g1= np.array([1,0.75])
g2= np.array([1,0.75])
 
#Intercepts
A1,B1 =  line_icepts(n1,c[0])
A2,B2 =  line_icepts(n2,c[1])
 
 
#Matrix Ranks
N=np.vstack((n1,n2))
M =np.vstack((N.T, c)).T
#M =np.vstack((n1,n2, c))
rank_N = np.linalg.matrix_rank(N)
rank_M = np.linalg.matrix_rank(M)
m,n = np.shape(N)
print(rank_M, rank_N, M)
 
#Checking for solution
if rank_N==rank_M:
  if rank_N == m:
    print("Unique Solution Exists:",np.linalg.inv(N)@c)
  else:
    print("Infinite Number of Solutions")
else:
  print("No solution")
 
##Generating all lines
k1 = 0
k2 = 5
 
x_A1B1 =  line_dir_pt(g1,A1,k1,k2)
#k1 = -4
#k2 = 4
x_A2B2 =   line_dir_pt(g2,A2,k1,k2)
#
#Plotting all lines
plt.plot(x_A1B1[0,:],x_A1B1[1,:],label='line 1')
plt.plot(x_A2B2[0,:],x_A2B2[1,:],label='line 2')
#plt.plot(A[0], A[1], 'o')
 
plt.plot(2, 3, 'o')
plt.text(2 * (1 + 0.1), 3 * (1 - 0.1) , 'A1')
 
 
 
plt.xlabel('$x$')
plt.ylabel('$y$')
plt.legend(loc='best')
plt.grid() # minor
plt.axis('equal')